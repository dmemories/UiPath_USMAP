<Activity mc:Ignorable="sap sap2010" x:Class="DJavaScript_SetValue" this:DJavaScript_SetValue.isInnerText="False" this:DJavaScript_SetValue.timeout="7000" this:DJavaScript_SetValue.continueWhenError="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="whichSelector" Type="InArgument(x:String)" />
    <x:Property Name="elementTagName" Type="InArgument(x:String)" />
    <x:Property Name="elementName" Type="InArgument(x:String)" />
    <x:Property Name="elementId" Type="InArgument(x:String)" />
    <x:Property Name="elementClassName" Type="InArgument(x:String)" />
    <x:Property Name="elementSelectorAll" Type="InArgument(x:String)" />
    <x:Property Name="elementIndex" Type="InArgument(x:Int32)" />
    <x:Property Name="isInnerText" Type="InArgument(x:Boolean)" />
    <x:Property Name="parameter" Type="InArgument(x:String)" />
    <x:Property Name="setValueTo" Type="InArgument(x:String)" />
    <x:Property Name="timeout" Type="InArgument(x:Int32)" />
    <x:Property Name="continueWhenError" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1074,1036</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DInjectJSGetValue_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="42">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="DJavaScript_SetValue" sap:VirtualizedContainerService.HintSize="1084,871" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="DJavaScript_SetValue" Name="seqName" />
      <Variable x:TypeArguments="x:Boolean" Name="b" />
      <Variable x:TypeArguments="x:String" Name="scriptCode" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:UiElementExists DisplayName="Element Exists" Exists="[b]" sap:VirtualizedContainerService.HintSize="1042,68" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
      <ui:UiElementExists.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="91fca711-4f09-4515-813d-d77c4189b41d" Selector="[whichSelector]" TimeoutMS="[timeout]" WaitForReady="INTERACTIVE" />
      </ui:UiElementExists.Target>
    </ui:UiElementExists>
    <If Condition="[b]" sap:VirtualizedContainerService.HintSize="1042,671" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,523" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="334,64" sap2010:WorkflowViewState.IdRef="Assign_9">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[scriptCode]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">["document." &amp; 
If(Not(String.IsNullOrEmpty(elementId)), "getElementById(" &amp; Chr(34) &amp; elementId, 
	If(Not(String.IsNullOrEmpty(elementName)), "getElementsByName(" &amp; Chr(34) &amp; elementName, 
		If(Not(String.IsNullOrEmpty(elementTagName)), "getElementsByTagName(" &amp; Chr(34) &amp; elementTagName, 
			If(Not(String.IsNullOrEmpty(elementClassName)), "getElementsByClassName(" &amp; Chr(34) &amp; elementClassName, "querySelectorAll(" &amp; Chr(34) &amp; elementSelectorAll)
		)
	)
) &amp; Chr(34) &amp; ")" &amp; If(elementIndex &gt; -1, "[" &amp; elementIndex.ToString &amp; "]", "") &amp; If(isInnerText, ".innerHTML", ".value") &amp; " = '" &amp; setValueTo &amp; "'"]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[scriptCode]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["function(){" &amp; scriptCode &amp; ";}"]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InjectJsScript ScriptOutput="{x:Null}" DisplayName="Private: Inject Js Script" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="InjectJsScript_1" InputParameter="[parameter]" ScriptCode="[scriptCode]">
            <ui:InjectJsScript.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4205a3db-b018-4349-88b7-d6468a15a57c" Selector="[whichSelector]" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
            </ui:InjectJsScript.Target>
          </ui:InjectJsScript>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;-----------------------------------------------------------------------------------------------&quot; &amp; vbCrLf &amp; seqName &amp; &quot; (Found Selector) : &quot; &amp; vbCrlf &amp; whichSelector &amp; vbCrLf &amp; &quot;    Element Id : &quot; &amp; elementId &amp; vbCrLf &amp; &quot;    Element Name : &quot; &amp; elementName &amp; vbCrLf &amp; &quot;    Element TagName : &quot; &amp; elementTagName  &amp; vbCrLf &amp; &quot;    Element Index : &quot; &amp; elementIndex  &amp; vbCrLf &amp; &quot;    Parameter : &quot; &amp; parameter &amp; vbCrLf &amp; &quot;    Script Code : &quot; &amp; scriptCode &amp; vbCrLf &amp; &quot;    Set Value To : &quot; &amp; setValueTo &amp; vbCrlf &amp; vbCrlf]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="621,431" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="579,60" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[scriptCode]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[continueWhenError]" sap:VirtualizedContainerService.HintSize="579,239" sap2010:WorkflowViewState.IdRef="If_7">
            <If.Then>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;-----------------------------------------------------------------------------------------------&quot; &amp; vbCrLf &amp; seqName &amp; &quot; (Selector Nof Found) : &quot; &amp; vbCrlf &amp; whichSelector &amp; vbCrLf &amp; &quot;    Element Id : &quot; &amp; elementId &amp; vbCrLf &amp; &quot;    Element Name : &quot; &amp; elementName &amp; vbCrLf &amp; &quot;    Element TagName : &quot; &amp; elementTagName  &amp; vbCrLf &amp; &quot;    Element Index : &quot; &amp; elementIndex  &amp; vbCrLf &amp; &quot;    Parameter : &quot; &amp; parameter &amp; vbCrLf &amp; &quot;    ***Script Code*** : &quot; &amp; scriptCode &amp; vbCrLf &amp; &quot;    Set Value To : &quot; &amp; setValueTo &amp; vbCrlf &amp; vbCrlf]" />
            </If.Then>
            <If.Else>
              <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="[&quot;-----------------------------------------------------------------------------------------------&quot; &amp; vbCrLf &amp; seqName &amp; &quot; (Selector Nof Found) : &quot; &amp; vbCrlf &amp; whichSelector &amp; vbCrLf &amp; &quot;    Element Id : &quot; &amp; elementId &amp; vbCrLf &amp; &quot;    Element Name : &quot; &amp; elementName &amp; vbCrLf &amp; &quot;    Element TagName : &quot; &amp; elementTagName  &amp; vbCrLf &amp; &quot;    Element Index : &quot; &amp; elementIndex  &amp; vbCrLf &amp; &quot;    Parameter : &quot; &amp; parameter &amp; vbCrLf &amp; &quot;    ***Script Code*** : &quot; &amp; scriptCode &amp; vbCrLf &amp; &quot;    Set Value To : &quot; &amp; setValueTo &amp; vbCrlf &amp; vbCrlf]" />
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>
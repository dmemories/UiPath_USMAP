<Activity mc:Ignorable="sap sap2010" x:Class="DZip_Archive7Zip" this:DZip_Archive7Zip.endWhenError="True" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="sourcePath" Type="InArgument(s:String[])" />
    <x:Property Name="destPath" Type="InArgument(x:String)" />
    <x:Property Name="password" Type="InArgument(x:String)" />
    <x:Property Name="endWhenError" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2025,2667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DDeleteFile_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="26">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Management.Automation</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="24">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="DZip_Archive7Zip" sap:VirtualizedContainerService.HintSize="2035,2502" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="seqName">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">DZip_Archive7Zip</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="errMsg" />
      <Variable x:TypeArguments="x:TimeSpan" Default="00:00:10" Name="timeout" />
      <Variable x:TypeArguments="x:String" Name="sourcePathStr" />
      <Variable x:TypeArguments="x:Int32" Name="i" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[String.IsNullOrEmpty(password)]" sap:VirtualizedContainerService.HintSize="1993,739" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Pick DisplayName="No Pass Pick" sap:VirtualizedContainerService.HintSize="974,591" sap2010:WorkflowViewState.IdRef="Pick_1">
          <PickBranch sap:VirtualizedContainerService.HintSize="488,545" sap2010:WorkflowViewState.IdRef="PickBranch_1">
            <PickBranch.Trigger>
              <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,287" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                <TryCatch.Try>
                  <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="C:\Program Files\7-Zip\7z.exe" DisplayName="Invoke Power Shell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_5">
                    <ui:InvokePowerShell.Parameters>
                      <InArgument x:TypeArguments="x:String" x:Key="-tzip">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="a">[destPath]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="_1">[If(sourcePath.Length &gt; 0, sourcePath(0), Nothing)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="_2">[If(sourcePath.Length &gt; 1, sourcePath(1), Nothing)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="_3">[If(sourcePath.Length &gt; 2, sourcePath(2), Nothing)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="_4">[If(sourcePath.Length &gt; 3, sourcePath(3), Nothing)]</InArgument>
                    </ui:InvokePowerShell.Parameters>
                  </ui:InvokePowerShell>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="e" />
                      </ActivityAction.Argument>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[errMsg]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[e.Message]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </PickBranch.Trigger>
          </PickBranch>
          <PickBranch sap:VirtualizedContainerService.HintSize="312,545" sap2010:WorkflowViewState.IdRef="PickBranch_2">
            <PickBranch.Trigger>
              <Delay DisplayName="Timeout Timer" Duration="[timeout]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
            </PickBranch.Trigger>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[errMsg]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Timeout</InArgument>
              </Assign.Value>
            </Assign>
          </PickBranch>
        </Pick>
      </If.Then>
      <If.Else>
        <Pick DisplayName="Pass Pick" sap:VirtualizedContainerService.HintSize="974,591" sap2010:WorkflowViewState.IdRef="Pick_3">
          <PickBranch sap:VirtualizedContainerService.HintSize="488,545" sap2010:WorkflowViewState.IdRef="PickBranch_5">
            <PickBranch.Trigger>
              <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,287" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                <TryCatch.Try>
                  <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="C:\Program Files\7-Zip\7z.exe" DisplayName="Invoke Power Shell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_7">
                    <ui:InvokePowerShell.Parameters>
                      <InArgument x:TypeArguments="x:String" x:Key="-tzip">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="a">[destPath]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="_1">[If(sourcePath.Length &gt; 0, sourcePath(0), Nothing)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="_2">[If(sourcePath.Length &gt; 1, sourcePath(1), Nothing)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="_3">[If(sourcePath.Length &gt; 2, sourcePath(2), Nothing)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="_4">[If(sourcePath.Length &gt; 3, sourcePath(3), Nothing)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="-p">[password]</InArgument>
                    </ui:InvokePowerShell.Parameters>
                  </ui:InvokePowerShell>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="e" />
                      </ActivityAction.Argument>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[errMsg]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[e.Message]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </PickBranch.Trigger>
          </PickBranch>
          <PickBranch sap:VirtualizedContainerService.HintSize="312,545" sap2010:WorkflowViewState.IdRef="PickBranch_6">
            <PickBranch.Trigger>
              <Delay DisplayName="Timeout Timer" Duration="[timeout]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
            </PickBranch.Trigger>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[errMsg]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Timeout</InArgument>
              </Assign.Value>
            </Assign>
          </PickBranch>
        </Pick>
      </If.Else>
    </If>
    <Assign sap:VirtualizedContainerService.HintSize="1993,60" sap2010:WorkflowViewState.IdRef="Assign_26">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[errMsg]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[errMsg.Replace("PowerShell command errors:", "")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1993,60" sap2010:WorkflowViewState.IdRef="Assign_19">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[errMsg]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[errMsg.Replace("WARNING: The system cannot find the file specified.", "")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1993,286" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Enumerable.Range(1, 5).ToArray]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Int32">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="i" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[errMsg]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[errMsg.Replace("_" + i.ToString, "")]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <Assign sap:VirtualizedContainerService.HintSize="1993,60" sap2010:WorkflowViewState.IdRef="Assign_24">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1993,386" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[sourcePath]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_18">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[sourcePathStr]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">[sourcePathStr &amp; vbCrlf &amp; "    (" &amp; i.ToString &amp; ") " &amp; item]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[i + 1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <If Condition="[String.IsNullOrWhiteSpace(errMsg)]" sap:VirtualizedContainerService.HintSize="905,579" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;-----------------------------------------------------------------------------------------------&quot; &amp; vbCrLf &amp; seqName &amp; &quot; : (Successfully) : &quot; &amp; vbCrlf &amp; &quot;    Source Path : &quot; &amp; sourcePathStr &amp; vbCrlf &amp; &quot;    Dest Path : &quot; &amp; destPath &amp; vbCrlf &amp; &quot;    Password : &quot; &amp; password &amp; vbCrlf &amp; vbCrlf]" />
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="526,431" sap2010:WorkflowViewState.IdRef="Sequence_15">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;-----------------------------------------------------------------------------------------------&quot; &amp; vbCrLf &amp; seqName &amp; &quot; : (Failed) : &quot; &amp; vbCrlf &amp; &quot;    Error Msg : &quot; &amp; errMsg &amp; vbCrlf &amp; &quot;    Source Path : &quot; &amp; sourcePathStr &amp; vbCrlf &amp; &quot;    Dest Path : &quot; &amp; destPath &amp; vbCrlf &amp; &quot;    Password : &quot; &amp; password &amp; vbCrlf &amp; vbCrlf]" />
          <If Condition="[endWhenError]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1">
                <TerminateWorkflow.Reason>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </TerminateWorkflow.Reason>
              </TerminateWorkflow>
            </If.Then>
          </If>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>